<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Judastree]]></title>
  <subtitle><![CDATA[You are the pretty sunshine of my life]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://judastree.github.io//"/>
  <updated>2015-12-27T14:01:28.000Z</updated>
  <id>http://judastree.github.io//</id>
  
  <author>
    <name><![CDATA[Judastree]]></name>
    <email><![CDATA[judastree@live.cn]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[git modified:xxx(modified content,untracked content,commit content)]]></title>
    <link href="http://judastree.github.io/2015/12/27/git-modified-xxx-modified-content-untracked-content-commit-content/"/>
    <id>http://judastree.github.io/2015/12/27/git-modified-xxx-modified-content-untracked-content-commit-content/</id>
    <published>2015-12-27T13:58:00.000Z</published>
    <updated>2015-12-27T14:01:28.000Z</updated>
    <content type="html"><![CDATA[<p>git add 或者commit,push的时候发现某个文件夹不能被add,commit,提示当前文件夹 modified:xxx(modified content)</p>
<p>去git远程仓库查看,这个目录是空的.</p>
<p>打开本地仓库的目录,发现xxx目录下有个.git的目录,影响了其父目录的trace.</p>
<p>解决办法:删除.git目录,重新提交</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>git add 或者commit,push的时候发现某个文件夹不能被add,commit,提示当前文件夹 modified:xxx(modified content)</p>
<p>去git远程仓库查看,这个目录是空的.</p>
<p>打开本地仓库的目录,发现xxx目录下有]]>
    </summary>
    
      <category term="git" scheme="http://judastree.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mitmproxy 抓包工具]]></title>
    <link href="http://judastree.github.io/2015/12/27/Mitmproxy-%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7/"/>
    <id>http://judastree.github.io/2015/12/27/Mitmproxy-抓包工具/</id>
    <published>2015-12-27T08:13:49.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<p>Windows下的Fiddler是神器，具备抓包，代理，文件替换等各种功能。但因为Fiddler是由.netframework开发的，不能在mac下跑。</p>
<p>虽然官方也出过fiddler的mac版，但不好用。所以在寻求mac下的替换工具时找到了这个Mitmproxy。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Windows下的Fiddler是神器，具备抓包，代理，文件替换等各种功能。但因为Fiddler是由.netframework开发的，不能在mac下跑。</p>
<p>虽然官方也出过fiddler的mac版，但不好用。所以在寻求mac下的替换工具时找到了这个Mitmprox]]>
    </summary>
    
      <category term="工具" scheme="http://judastree.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[webstorm 11激活]]></title>
    <link href="http://judastree.github.io/2015/12/26/webstorm-11%E6%BF%80%E6%B4%BB/"/>
    <id>http://judastree.github.io/2015/12/26/webstorm-11激活/</id>
    <published>2015-12-26T09:01:35.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<p>今天将webstorm更新到了11，全新的icon，同样是要激活，发现一个超方便的方式，不过原理木有搞清楚。</p>
<p>webstorm菜单栏【Help】-&gt;【Register】，在弹出的对话框中选中【License server】</p>
<p>地址输入：<a href="http://idea.lanyus.com/" target="_blank" rel="external">http://idea.lanyus.com/</a></p>
<p>如下图</p>
<p><img src="/images/webstormregister.png" alt="webstormregister"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天将webstorm更新到了11，全新的icon，同样是要激活，发现一个超方便的方式，不过原理木有搞清楚。</p>
<p>webstorm菜单栏【Help】-&gt;【Register】，在弹出的对话框中选中【License server】</p>
<p>地址输入：<a ]]>
    </summary>
    
      <category term="webstorm" scheme="http://judastree.github.io/tags/webstorm/"/>
    
      <category term="工具" scheme="http://judastree.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[自定义错误模块无法识别此错误]]></title>
    <link href="http://judastree.github.io/2015/12/13/%E8%87%AA%E5%AE%9A%E4%B9%89%E9%94%99%E8%AF%AF%E6%A8%A1%E5%9D%97%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB%E6%AD%A4%E9%94%99%E8%AF%AF/"/>
    <id>http://judastree.github.io/2015/12/13/自定义错误模块无法识别此错误/</id>
    <published>2015-12-13T11:00:22.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<h2 id="问题描述">问题描述</h2><p>前两天生产上发现某地区的部分用户手机扫码打开页面出现【自定义错误模块无法识别此错误】。</p>
<h2 id="排查过程">排查过程</h2><p>1.前端代码中并没有过这样的处理，所以就先查服务接口是否有这样的报错。</p>
<p>2.但发现服务接口并没有异常，于是去看页面请求的日志，发现当前页面出现了大量的429错。</p>
<p>3.http 的 429 错误码是Too Many Request.因为请求太多服务器拒绝了该IP的访问。查了下被拒绝的IP，刚好地区与故障用户的地区一致。</p>
<p>4.问题基本就是这个了，服务器返回了429的错误码，不像404，502这些常见的，用户的手机浏览器一般都没有去处理这个错误码，于是返回的【自定义错误模块无法识别此错误】</p>
<p>5.和业务反映原因，可能是手机连的wifi，出口ip一致，请求过多导致服务器拒绝，建议用户扫码时用移动网络。</p>
<p>6.业务反馈说，用户确实用的是移动网络啊。</p>
<ol>
<li>= =！继续查，发现曾经那个地方有爬虫访问公司网络，那个移动基站的IP被封了20几个。</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="问题描述">问题描述</h2><p>前两天生产上发现某地区的部分用户手机扫码打开页面出现【自定义错误模块无法识别此错误】。</p>
<h2 id="排查过程">排查过程</h2><p>1.前端代码中并没有过这样的处理，所以就先查服务接口是否有这样的报错。</p>
]]>
    </summary>
    
      <category term="故障排查" scheme="http://judastree.github.io/tags/%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Node 5.0: Cannot find module ./lib]]></title>
    <link href="http://judastree.github.io/2015/11/11/Node-5-0-Cannot-find-module-lib/"/>
    <id>http://judastree.github.io/2015/11/11/Node-5-0-Cannot-find-module-lib/</id>
    <published>2015-11-11T08:33:41.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<h2 id="问题描述(Issue)">问题描述(Issue)</h2><p>  it throws “Cannot find module ‘./lib’” when I run “npm install -g xxx” command.</p>
<p>  Mac升级到node 5.0之后，执行npm install命令出现Cannot find module ‘./lib’的错误。</p>
<h2 id="问题原因（Cause）">问题原因（Cause）</h2><p>   The current theory is that a change made to the OS X installer for Node is causing two npm installations to be overlaid, which is understandably causing problems. </p>
<h2 id="解决办法（Solution）">解决办法（Solution）</h2><p>   If you remove /usr/local/lib/node_modules/npm and rerun the Node 5.0 installer, you should be left with a working npm.</p>
<p>   移除 /usr/local/lib/node_modules/npm目录，重装node 5.0.</p>
<h2 id="参考(Refer)">参考(Refer)</h2><p>   <a href="https://github.com/npm/npm/issues/10166" target="_blank" rel="external">Error with install of npm 3 via Node.js v5</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="问题描述(Issue)">问题描述(Issue)</h2><p>  it throws “Cannot find module ‘./lib’” when I run “npm install -g xxx” command.</p>
<p>  Mac升级到nod]]>
    </summary>
    
      <category term="mac" scheme="http://judastree.github.io/tags/mac/"/>
    
      <category term="node" scheme="http://judastree.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[这里面的一些console方法请用起来]]></title>
    <link href="http://judastree.github.io/2015/11/11/%E8%BF%99%E9%87%8C%E9%9D%A2%E7%9A%84%E4%B8%80%E4%BA%9Bconsole%E6%96%B9%E6%B3%95%E8%AF%B7%E7%94%A8%E8%B5%B7%E6%9D%A5/"/>
    <id>http://judastree.github.io/2015/11/11/这里面的一些console方法请用起来/</id>
    <published>2015-11-11T07:02:12.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<p>console.profile([profileLabel]);</p>
<p>console.time(name);</p>
<p>console.timeEnd(name);</p>
<p>console.trace();</p>
<p>详见：<a href="http://www.w3cfuns.com/article-5600040-1-1.html" target="_blank" rel="external">你真的了解 console 吗</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>console.profile([profileLabel]);</p>
<p>console.time(name);</p>
<p>console.timeEnd(name);</p>
<p>console.trace();</p>
<p>详见：<a href="http]]>
    </summary>
    
      <category term="JavaScript" scheme="http://judastree.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac ox 默认环境变量]]></title>
    <link href="http://judastree.github.io/2015/11/10/Mac-ox-%E9%BB%98%E8%AE%A4%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    <id>http://judastree.github.io/2015/11/10/Mac-ox-默认环境变量/</id>
    <published>2015-11-10T05:47:55.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<p>  今天设置环境变量设置错了，导致整个mac的终端命令（sudo,ls,open,vi等）都不能用了。</p>
<p>  执行下面的命令，保证一些默认的可以用：</p>
<pre><code>export <span class="constant">PATH=</span>/<span class="symbol">bin:</span>/sbin/<span class="symbol">:/usr/bin</span><span class="symbol">:/usr/sbin</span><span class="symbol">:/usr/local/bin</span><span class="symbol">:/opt/local/sbin</span><span class="symbol">:/opt/local/sbin</span>
</code></pre><p>  之后再设置你要的环境变量</p>
<pre><code><span class="title">vim</span> ~/.bash_profile
</code></pre><p>  立即生效命令</p>
<pre><code><span class="built_in">source</span> ~/.bash_profile
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>  今天设置环境变量设置错了，导致整个mac的终端命令（sudo,ls,open,vi等）都不能用了。</p>
<p>  执行下面的命令，保证一些默认的可以用：</p>
<pre><code>export <span class="constant">PATH=</span]]>
    </summary>
    
      <category term="mac" scheme="http://judastree.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JS判断一个变量是否是Array]]></title>
    <link href="http://judastree.github.io/2015/11/04/%E5%88%A4%E6%96%AD%E5%8F%82%E6%95%B0%E6%98%AFArray%E8%BF%98%E6%98%AFObject/"/>
    <id>http://judastree.github.io/2015/11/04/判断参数是Array还是Object/</id>
    <published>2015-11-04T15:03:39.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<h2 id="问题描述">问题描述</h2><p>用typeof来检查一个变量，不论是array还是object，都将返回‘object’。那么怎样判断一个JavaScript变量是array还是obiect？ </p>
<h2 id="方案">方案</h2><ol>
<li><p>通过该变量的length属性。</p>
<p>Array类型有length属性，得到是&gt;=0的数值。Object的length是undefined。</p>
<p>但当该对象自己有length属性时，这个方法失效。</p>
</li>
<li><p>通过instanceof 方法</p>
<p>a instanceof Array 是一个语法糖，相当于 a.constructor == Array.</p>
<p>这种方法在多个frame的环境下失效，因为每个iframe都有一套自己的执行环境，跨frame实例化的对象彼此是不共享原型链。</p>
</li>
<li><p>Array.isArray()</p>
<p>ECMAScript 5的写法，绝大多数的浏览器支持这种方式，早期的一些浏览器不支持。</p>
</li>
<li><p>用prototype的call方法来实现</p>
<p>这也是Jquery的实现，推荐采用这种。</p>
<p>因为js中每一个function中都会有call方法和prototype属性，并且js在Object.prototype中的tostring函数上做了一个封装，</p>
<p>就是调用toString.call后，会返回[object constructorName]的字符串格式，这里的constructorName就是call参数的函数名</p>
</li>
</ol>
<pre><code>Object<span class="class">.prototype</span><span class="class">.toString</span><span class="class">.call</span>(arr) == <span class="string">'[object Array]'</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="问题描述">问题描述</h2><p>用typeof来检查一个变量，不论是array还是object，都将返回‘object’。那么怎样判断一个JavaScript变量是array还是obiect？ </p>
<h2 id="方案">方案</h2><ol>
<li>]]>
    </summary>
    
      <category term="JavaScript" scheme="http://judastree.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[获取安卓签名keystore中的sha1]]></title>
    <link href="http://judastree.github.io/2015/10/16/%E8%8E%B7%E5%8F%96keystore%E7%AD%BE%E5%90%8D%E4%B8%AD%E5%BE%97sha1/"/>
    <id>http://judastree.github.io/2015/10/16/获取keystore签名中得sha1/</id>
    <published>2015-10-16T06:43:23.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<p>keytool的命令，可以获取keystore中的很多信息。</p>
<p>cmd 到用户根目录下的.android目录。</p>
<pre><code><span class="built_in">cd</span> .android
</code></pre><p>将你的keystore(比如叫yourdebug.keystore)文件拷到.android目录，然后执行命令：</p>
<pre><code>keytool -<span class="type">list</span> -v -keystore yourdebug.keystore
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>keytool的命令，可以获取keystore中的很多信息。</p>
<p>cmd 到用户根目录下的.android目录。</p>
<pre><code><span class="built_in">cd</span> .android
</code></pre><p>将你]]>
    </summary>
    
      <category term="Android" scheme="http://judastree.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[LeetCode Populating Next Right Pointers in Each Node]]></title>
    <link href="http://judastree.github.io/2015/10/12/LeetCode-Populating-Next-Right-Pointers-in-Each-Node/"/>
    <id>http://judastree.github.io/2015/10/12/LeetCode-Populating-Next-Right-Pointers-in-Each-Node/</id>
    <published>2015-10-12T07:22:17.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<h2 id="题目">题目</h2><p><a href="https://leetcode.com/problems/populating-next-right-pointers-in-each-node/" target="_blank" rel="external">Populating Next Right Pointers in Each Node</a></p>
<p>给一个平衡二叉树的每个节点加上next属性,next 指向起相邻的节点，如果没有则指向null;</p>
<p>Given the following perfect binary tree,</p>
<pre><code>     <span class="number">1</span>
   /  <span class="string">\</span>
  <span class="number">2</span>    <span class="number">3</span>
 / <span class="string">\</span>  / <span class="string">\</span>
<span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>
</code></pre><p>After calling your function, the tree should look like:</p>
<pre><code>     <span class="number">1</span> <span class="subst">-&gt; </span><span class="built_in">NULL</span>
   <span class="subst">/</span>  <span class="subst">\</span>
  <span class="number">2</span> <span class="subst">-&gt; </span><span class="number">3</span> <span class="subst">-&gt; </span><span class="built_in">NULL</span>
 <span class="subst">/</span> <span class="subst">\</span>  <span class="subst">/</span> <span class="subst">\</span>
<span class="number">4</span><span class="subst">-&gt;</span><span class="number">5</span><span class="subst">-&gt;</span><span class="number">6</span><span class="subst">-&gt;</span><span class="number">7</span> <span class="subst">-&gt; </span><span class="built_in">NULL</span>
</code></pre><h2 id="思路">思路</h2><p>   1.对于一个父节点来说，它左孩子的next指向它的右孩子，它的右孩子的next指向它自己next节点的左孩子。<br>   2.遍历整个二叉树，对每个父节点进行1操作。</p>
<h2 id="实现">实现</h2><p>JavaScript:</p>
<pre><code>/**
 * Definition <span class="keyword">for</span> binary tree <span class="keyword">with</span> <span class="keyword">next</span> pointer.
 * <span class="keyword">function</span> TreeLinkNode(val) {
 *     this.val = val;
 *     this.<span class="built_in">left</span> = this.<span class="built_in">right</span> = this.<span class="keyword">next</span> = <span class="literal">null</span>;
 * }
 */

/**
 * @param {TreeLinkNode} root
 * @return {void} <span class="keyword">Do</span> <span class="keyword">not</span> return anything, modify tree <span class="keyword">in</span>-place instead.
 */
var connect = <span class="keyword">function</span>(root) {
    <span class="keyword">if</span>(root===<span class="literal">null</span>) return;
    root.<span class="keyword">next</span> =<span class="literal">null</span>;


    <span class="keyword">function</span> traversal(node){
        <span class="keyword">if</span>(node){
            <span class="keyword">if</span>(node.<span class="built_in">left</span>){
                connectLeftChild(node,node.<span class="built_in">left</span>);
                traversal(node.<span class="built_in">left</span>);
            }
            <span class="keyword">if</span>(node.<span class="built_in">right</span>){
                connectRightChild(node,node.<span class="built_in">right</span>);
                traversal(node.<span class="built_in">right</span>);
            }
        }


    }
    <span class="keyword">function</span> connectLeftChild(parent,node){

        <span class="keyword">if</span>(node){
             node.<span class="keyword">next</span> = parent.<span class="built_in">right</span>;
        }
    } 
    <span class="keyword">function</span> connectRightChild(parent,node){
        <span class="keyword">if</span>(node){
            <span class="keyword">if</span>(parent.<span class="keyword">next</span>){
                node.<span class="keyword">next</span> = parent.<span class="keyword">next</span>.<span class="built_in">left</span>;
            }<span class="keyword">else</span>{
                node.<span class="keyword">next</span> = <span class="literal">null</span>;
            }

        }

    }
    traversal(root);
};
</code></pre><h2 id="耗时">耗时</h2><p>  <img src="/images/nextpointer.png" alt="nextpointerruntime"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="题目">题目</h2><p><a href="https://leetcode.com/problems/populating-next-right-pointers-in-each-node/" target="_blank" rel="external">Po]]>
    </summary>
    
      <category term="LeetCode" scheme="http://judastree.github.io/tags/LeetCode/"/>
    
      <category term="算法" scheme="http://judastree.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[LeetCode Move Zeroes]]></title>
    <link href="http://judastree.github.io/2015/10/10/LeetCode-Move-Zeroes/"/>
    <id>http://judastree.github.io/2015/10/10/LeetCode-Move-Zeroes/</id>
    <published>2015-10-10T12:51:48.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<h2 id="题目">题目</h2><p><a href="https://leetcode.com/problems/move-zeroes/" target="_blank" rel="external">Move Zeroes</a></p>
<p>将一个数组中的0元素都移到最后面，同时保持非0元素的顺序不变。</p>
<p>比如，[0,1,0,3,12] 移动后变成了[1,3,12,0,0]</p>
<h2 id="思路">思路</h2><ol>
<li>找到第一个0元素的位置，从第一个0元素的位置往后遍历</li>
<li>发现非0元素，则与第一个0元素互换位置，并将第一个0元素的位置往后移一位。</li>
<li>继续遍历，重复2动作直到遍历结束。</li>
</ol>
<h2 id="实现">实现</h2><p>Javascript</p>
<pre><code><span class="comment">/**
 * <span class="doctag">@param</span> {number[]} nums
 * <span class="doctag">@return</span> {void} Do not return anything, modify nums in-place instead.
 */</span>
<span class="keyword">var</span> moveZeroes = <span class="function"><span class="keyword">function</span><span class="params">(nums)</span> </span>{
    <span class="keyword">var</span> firstzero = <span class="number">0</span>,temp;
    <span class="keyword">for</span>(;firstzero&lt;nums.length-<span class="number">1</span>;firstzero++){
        <span class="comment">//find first zero</span>
        <span class="keyword">if</span>(nums[firstzero]===<span class="number">0</span>) <span class="keyword">break</span>;
    }
    <span class="keyword">for</span>(<span class="keyword">var</span> j=firstzero+<span class="number">1</span>;j&lt;nums.length;j++){
        <span class="keyword">if</span>(nums[j]!==<span class="number">0</span>){
            <span class="comment">//non-zero, change and move on</span>
            temp = nums[j];
            nums[j]=nums[firstzero];
            nums[firstzero]=temp;
            firstzero ++;
        }

    }

};
</code></pre><h2 id="耗时">耗时</h2><p><img src="/images/movezeroes.png" alt="movezeroes"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="题目">题目</h2><p><a href="https://leetcode.com/problems/move-zeroes/" target="_blank" rel="external">Move Zeroes</a></p>
<p>将一个数组中的0元素都]]>
    </summary>
    
      <category term="LeetCode" scheme="http://judastree.github.io/tags/LeetCode/"/>
    
      <category term="算法" scheme="http://judastree.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ubuntu 上安装最新版本的express]]></title>
    <link href="http://judastree.github.io/2015/09/30/ubuntu-%E4%B8%8A%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC%E7%9A%84express/"/>
    <id>http://judastree.github.io/2015/09/30/ubuntu-上安装最新版本的express/</id>
    <published>2015-09-30T08:58:37.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<h2 id="问题描述">问题描述</h2><p>  在ubuntu上通过apt-get install node-express命令安装的express版本只有2.5.8</p>
<p>  用npm install express@4.13.1 -g 命令可以安装高版本的express</p>
<p>  但是执行express —version时却返现并没有这个目录。</p>
<h2 id="解决办法">解决办法</h2><p>  这个问题是express的安装目录并不在系统的环境变量之中。</p>
<p>  1 将 express的实际安装目录加入环境变量。</p>
<pre><code>sudo vi <span class="regexp">/etc/</span>environment 
</code></pre><p>  2 保存</p>
<p>  3 使它立即生效</p>
<pre><code><span class="keyword">source</span> <span class="regexp">/etc/</span>environment 
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="问题描述">问题描述</h2><p>  在ubuntu上通过apt-get install node-express命令安装的express版本只有2.5.8</p>
<p>  用npm install express@4.13.1 -g 命令可以安装高版本的ex]]>
    </summary>
    
      <category term="工具" scheme="http://judastree.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[node 应用绑定80端口]]></title>
    <link href="http://judastree.github.io/2015/09/30/node-%E5%BA%94%E7%94%A8%E7%BB%91%E5%AE%9A80%E7%AB%AF%E5%8F%A3/"/>
    <id>http://judastree.github.io/2015/09/30/node-应用绑定80端口/</id>
    <published>2015-09-30T05:20:41.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<p>node 应用绑定80端口，启动时需要管理员权限。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>node 应用绑定80端口，启动时需要管理员权限。</p>
]]>
    </summary>
    
      <category term="node" scheme="http://judastree.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[将hexo部署在github pages 的子目录]]></title>
    <link href="http://judastree.github.io/2015/09/29/%E5%B0%86hexo%E9%83%A8%E7%BD%B2%E5%9C%A8github%20pages%20%E7%9A%84%E5%AD%90%E7%9B%AE%E5%BD%95/"/>
    <id>http://judastree.github.io/2015/09/29/将hexo部署在github pages 的子目录/</id>
    <published>2015-09-29T03:25:07.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<h2 id="场景：">场景：</h2><p>  个人博客和个人一些项目都想放到github pages这个静态服务器上。</p>
<h2 id="冲突：">冲突：</h2><ol>
<li><p>最简单的想到的是在根目录下分blog和project的目录。</p>
<p>但是我之前搭hexo的时候已经把博客的东西放到了根目录，试了一下整体搬迁到blog目录，会出现css，图片，js的路径问题。</p>
<p>这里就要逐个修改hexo的路径配置。</p>
</li>
<li><p>还有另外一种办法就是，博客继续保留在github.io的根目录上，同时再建一个project目录。</p>
<p>project目录下是一些需要运行在静态服务器上的代码，比如做demo。</p>
<p>但用hexo deploy进行部署的时候，只能deploy 博客的代码，不能把自己project的代码也push上去。</p>
<p>这里就需要修改hexo自带的deployer.js的文件。自行添加文件拷贝的任务。</p>
</li>
</ol>
<h2 id="修改hexo的路径配置">修改hexo的路径配置</h2><ol>
<li><p>首先是博客目录下的_config.yml 文件</p>
<p>   url: <a href="http://judastree.github.io/blog/" target="_blank" rel="external">http://judastree.github.io/blog/</a><br>   root: /blog/</p>
</li>
<li><p>然后是主题目录下的_config.yml 文件</p>
<h1 id="菜单">菜单</h1><p>   menu:</p>
<pre><code><span class="string">home:</span> <span class="regexp">/blog/</span>
<span class="string">archives:</span> <span class="regexp">/blog/</span>archives
<span class="string">about:</span> <span class="regexp">/blog/</span>about
<span class="string">tags:</span> <span class="regexp">/blog/</span>tags            
</code></pre><h1 id="头像">头像</h1><p>   avatar: /blog/images/profile.jpeg</p>
</li>
<li><p>再接下来是需要自己细看的修改的，比如图片的引用地址。</p>
</li>
</ol>
<h2 id="修改hexo_deployer-js文件">修改hexo deployer.js文件</h2><ol>
<li><p>打开文件:node_modules/hexo-deployer-git/lib/deployer.js</p>
</li>
<li><p>找到对应代码片段，拷贝project目录，还有gitignore的文件，hexo的.deploy_git目录下原来没有gitignore文件</p>
<p>   return fs.exists(deployDir).then(function(exist){</p>
<pre><code><span class="keyword">if</span> (exist) <span class="keyword">return</span>;
<span class="built_in">log</span>.info(<span class="string">'Setting up Git deployment...'</span>);
<span class="keyword">return</span> <span class="title">setup</span>();
</code></pre><p>   }).then(function(){</p>
<pre><code>//<span class="keyword">log</span>.info(<span class="string">'Git pull first'</span>);
<span class="regexp">//git</span>(<span class="string">'pull'</span>);
<span class="keyword">log</span>.info(<span class="string">'Clearing .deploy folder...'</span>);
<span class="keyword">return</span> fs.emptyDir(deployDir);
</code></pre><p>   }).then(function(){</p>
<pre><code>//log.<span class="keyword">info</span>(<span class="string">'Copying files from public folder...'</span>);
<span class="keyword">return</span> fs.copyDir(publicDir, deployDir);
//log.<span class="keyword">info</span>(<span class="string">'Copying gitignore...'</span>);
//fs.copyFile(gitignoreFile,deployDir+<span class="string">"/.gitignore"</span>);
//log.<span class="keyword">info</span>(<span class="string">'Copying files from other project folder...'</span>);
//<span class="keyword">return</span> fs.copyDir(otherProjectFolderDir,deployDir+<span class="string">"/projects"</span>);
</code></pre><p>   }).then(function(){</p>
<pre><code><span class="function"><span class="keyword">return</span> <span class="title">parseConfig</span><span class="params">(args)</span></span>;
</code></pre><p>   }).map(function(repo){</p>
<pre><code><span class="function"><span class="keyword">return</span> <span class="title">push</span><span class="params">(repo)</span></span>;
</code></pre><p>   });</p>
</li>
<li><p>注意这里还要加入git pull 的命令，因为当你在project的目录提交了代码，博客的目录不拉取最新的commit的话，提交会有问题的。</p>
</li>
</ol>
<h2 id="博客文章的push问题">博客文章的push问题</h2><p>   我用第一种方法，将博客从根目录搬到blog子目录。 除了路径的问题，和第二种方法一样，也遇到了push的问题。</p>
<p>   因为git本地仓库和远程仓库对应，不能只push博客的目录，要push整个本地仓库都要push上去。</p>
<p>   这里还是修改hexo 的deployer.js ，添加自定义的任务。</p>
<p>   比如将hexo的public目录不是复制到.deploy_git目录，而是复制到我们本地的仓库的blog目录。</p>
<pre><code>//<span class="keyword">var</span> deployDir = pathFn.join(baseDir, <span class="string">'.deploy_git'</span>);
<span class="keyword">var</span> deployDir = <span class="variable">"/Users/judastree/Documents/code/github/judastree.github.io/blog"</span>;
</code></pre><p>   这里commit可以，但是push可能会遇到问题。 </p>
<p>   继续修改deployer.js里的push代码。将push -u origin branch —force 改成直接push。github默认会给我们-u的。</p>
<pre><code>//<span class="built_in">return</span> git(<span class="string">'push'</span>, <span class="string">'-u'</span>, repo.url, <span class="string">'master:'</span> + repo.branch, <span class="string">'--force'</span>);
<span class="built_in">return</span> git(<span class="string">'push'</span>,<span class="string">'-u'</span>,<span class="string">'origin'</span>,repo.branch);
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="场景：">场景：</h2><p>  个人博客和个人一些项目都想放到github pages这个静态服务器上。</p>
<h2 id="冲突：">冲突：</h2><ol>
<li><p>最简单的想到的是在根目录下分blog和project的目录。</p>
<p>但是]]>
    </summary>
    
      <category term="工具" scheme="http://judastree.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[React Native Node 4.0]]></title>
    <link href="http://judastree.github.io/2015/09/18/React-Native-Node-4-0/"/>
    <id>http://judastree.github.io/2015/09/18/React-Native-Node-4-0/</id>
    <published>2015-09-18T02:27:20.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<p>今天跑了下React Native的Hello World。 发现Node的版本必须在4.0+， 不然终端的8081服务起不来。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天跑了下React Native的Hello World。 发现Node的版本必须在4.0+， 不然终端的8081服务起不来。</p>
]]>
    </summary>
    
      <category term="React" scheme="http://judastree.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[IOS 模拟器回到主页]]></title>
    <link href="http://judastree.github.io/2015/09/17/IOS-%E6%A8%A1%E6%8B%9F%E5%99%A8%E5%9B%9E%E5%88%B0%E4%B8%BB%E9%A1%B5/"/>
    <id>http://judastree.github.io/2015/09/17/IOS-模拟器回到主页/</id>
    <published>2015-09-17T08:24:49.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<p>IOS 的模拟器上，没有HOME键，如果需要返回主页，按键盘shift+cmd+h</p>
<p>在模拟器上实现缩放的功能比较费劲（按住option键），建议真机上试。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>IOS 的模拟器上，没有HOME键，如果需要返回主页，按键盘shift+cmd+h</p>
<p>在模拟器上实现缩放的功能比较费劲（按住option键），建议真机上试。</p>
]]>
    </summary>
    
      <category term="IOS" scheme="http://judastree.github.io/tags/IOS/"/>
    
      <category term="工具" scheme="http://judastree.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android 录制操作视频]]></title>
    <link href="http://judastree.github.io/2015/09/16/Android-%E5%BD%95%E5%88%B6%E6%93%8D%E4%BD%9C%E8%A7%86%E9%A2%91/"/>
    <id>http://judastree.github.io/2015/09/16/Android-录制操作视频/</id>
    <published>2015-09-16T06:49:49.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<p>利用adb screenrecord的命令，系统Android4.4(API level 19)以上，支持mp4的视频格式</p>
<h2 id="开始录制的命令">开始录制的命令</h2><pre><code>adb shell screenrecord <span class="regexp">/sdcard/</span>demo.mp4
</code></pre><h2 id="导出视屏">导出视屏</h2><pre><code>adb pull <span class="regexp">/sdcard/</span>demo.mp4 <span class="string">D:</span>/
</code></pre><h2 id="其他命令参数">其他命令参数</h2><pre><code>adb <span class="built_in">shell</span> screenrecord <span class="comment">--help</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>利用adb screenrecord的命令，系统Android4.4(API level 19)以上，支持mp4的视频格式</p>
<h2 id="开始录制的命令">开始录制的命令</h2><pre><code>adb shell screenrecord <span cl]]>
    </summary>
    
      <category term="Android" scheme="http://judastree.github.io/tags/Android/"/>
    
      <category term="adb" scheme="http://judastree.github.io/tags/adb/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[坑死的Amazon AWS]]></title>
    <link href="http://judastree.github.io/2015/09/13/%E5%9D%91%E6%AD%BB%E7%9A%84Amazon-AWS/"/>
    <id>http://judastree.github.io/2015/09/13/坑死的Amazon-AWS/</id>
    <published>2015-09-13T06:42:28.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<p>很久前，想要找个免费的云空间搭服务，听说亚马逊的AWS可以免费使用多久，就去注册试了下，后面忙别的忘了这事。</p>
<p>直到AWS的账单邮件一封封发来……</p>
<p>一个月2，3刀就酱没了，坑死！！！！没钱了应该邮件提醒不续费就停止啊，一直不停止应用然后默默收费算什么啊。</p>
<p>赶紧把应用停掉，以后再也不用AWS了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>很久前，想要找个免费的云空间搭服务，听说亚马逊的AWS可以免费使用多久，就去注册试了下，后面忙别的忘了这事。</p>
<p>直到AWS的账单邮件一封封发来……</p>
<p>一个月2，3刀就酱没了，坑死！！！！没钱了应该邮件提醒不续费就停止啊，一直不停止应用然后默默收费算什]]>
    </summary>
    
      <category term="工具" scheme="http://judastree.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何进行monkey自动化测试]]></title>
    <link href="http://judastree.github.io/2015/09/08/%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8CMonkey%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    <id>http://judastree.github.io/2015/09/08/如何进行Monkey自动化测试/</id>
    <published>2015-09-08T11:30:06.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<h2 id="简介">简介</h2><p>  Android Monkey自动化测试：Monkey是Android SDK中自带的一个命令行工具，可以运行在模拟器里或实际设备中。<br>  它向系统发送伪随机的用户事件流(如按键输入、触摸屏输入、手势输入等)，实现对正在开发的应用程序进行压力测试。</p>
<h2 id="准备条件">准备条件</h2><ol>
<li>Android SDK</li>
<li>USB数据线</li>
<li>将sdk中的adb加入全局环境变量</li>
</ol>
<h2 id="步骤">步骤</h2><ol>
<li><p>确认设备已经连接到PC上</p>
<p>   adb devices</p>
<p>2.你可以指定要测试的app的包名，如果没有指定的话是测试所有的app。将日志输出到c盘monkeylog.txt中</p>
<p>   adb shell monkey -p com.android.test  —throttle 1000 -s 600 -v -v -v 1000&gt;C:\monkeylog.txt</p>
</li>
</ol>
<h2 id="如何停止Monkey测试">如何停止Monkey测试</h2><ol>
<li><p>adb shell(登录设备)。</p>
</li>
<li><p>ps|grep monkey(查找进程)。</p>
</li>
<li><p>kill ID(结束进程)。 </p>
</li>
</ol>
<h2 id="如何获取ANR文件？（需要具备root权限）">如何获取ANR文件？（需要具备root权限）</h2><ol>
<li>adb shell(登录设备)</li>
<li>cd /data/anr(进入到anr文件夹)</li>
<li>ll(查看文件)</li>
<li>adb pull /data/anr/traces.txt C:\traces.txt(文件复制)       </li>
</ol>
<h2 id="Monkey命令行参数详解">Monkey命令行参数详解</h2><p>   -p: 所要测试的包。<br>         示例：-p com.android.test<br>   -throttle: 在事件之间插入固定延迟。<br>         示例：—throttle 1000（毫秒）<br>   -s: 伪随机数生成器的seed值。<br>         示例： -s 600（如果用相同的seed值再次运行monkey，它将生成相同的事件序列。）<br>   -v: 用于指定日志的详细程度。<br>         示例： -v -v -v 100（3个-v代表最详细的日志级别）（数字1000： 表示测试事件数）</p>
<p>   <a href="http://developer.android.com/tools/help/monkey.html" target="_blank" rel="external">其他命令参数</a>      </p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="简介">简介</h2><p>  Android Monkey自动化测试：Monkey是Android SDK中自带的一个命令行工具，可以运行在模拟器里或实际设备中。<br>  它向系统发送伪随机的用户事件流(如按键输入、触摸屏输入、手势输入等)，实现对正在开发的应]]>
    </summary>
    
      <category term="Android" scheme="http://judastree.github.io/tags/Android/"/>
    
      <category term="Monkey" scheme="http://judastree.github.io/tags/Monkey/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[刷小米开发版系统助力安卓webview调试]]></title>
    <link href="http://judastree.github.io/2015/09/07/Nexus-7-%E5%88%B7%E5%B0%8F%E7%B1%B3%E5%BC%80%E5%8F%91%E7%89%88%E7%B3%BB%E7%BB%9F%E5%8A%A9%E5%8A%9Bwebview%E8%B0%83%E8%AF%95/"/>
    <id>http://judastree.github.io/2015/09/07/Nexus-7-刷小米开发版系统助力webview调试/</id>
    <published>2015-09-07T04:22:12.000Z</published>
    <updated>2015-12-27T13:24:35.000Z</updated>
    <content type="html"><![CDATA[<p>偶然发现在小米开发版系统上装的app应用，其webview的debug模式是打开的！！！</p>
<p>那么也就是说以后不管是qq，淘宝，只要是他们用了webview都可以直接在chrome中远程调试线上代码了的。</p>
<p>好处不用多说，直接搞起来。</p>
<h2 id="刷机步骤">刷机步骤</h2><p>以我的nexus 7 为例。</p>
<ol>
<li><p>首先需要<a href="http://judastree.github.io/blog/2015/09/07/Nexus-7-%E8%A7%A3%E9%94%81/" target="_blank" rel="external">解锁设备</a> </p>
</li>
<li><p>然后准备好小米开发版系统，我在rom基地下的<a href="http://www.romjd.com/Rom/Detail/26195" target="_blank" rel="external">Google Nexus 7(第二代)刷机包 官方MIUI V5 4.8.22 开发版</a></p>
</li>
<li><p>PC端下载刷机精灵，之后的操作就很简单了，按着刷机精灵的步骤来。</p>
</li>
</ol>
<h2 id="效果">效果</h2><p>nexus上已经是小米的系统了。</p>
<p><img src="/images/xiaomisystem.jpg" alt="xiaomisystem"></p>
<p>在nexus上打开了qq，淘宝和电视淘宝的app， 直接可以在chrome中debug。</p>
<p><img src="/images/removedebug.png" alt="removedebug"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>偶然发现在小米开发版系统上装的app应用，其webview的debug模式是打开的！！！</p>
<p>那么也就是说以后不管是qq，淘宝，只要是他们用了webview都可以直接在chrome中远程调试线上代码了的。</p>
<p>好处不用多说，直接搞起来。</p>
<h2 ]]>
    </summary>
    
      <category term="Android" scheme="http://judastree.github.io/tags/Android/"/>
    
      <category term="工具" scheme="http://judastree.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>